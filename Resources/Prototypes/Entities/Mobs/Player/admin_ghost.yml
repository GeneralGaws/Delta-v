- type: entity
  parent: MobObserver
  id: AdminObserver
  name: admin observer
  noSpawn: true
  components:
  - type: Eye
    visMask:
      - TelegnosticProjection
      - PsionicInvisibility
      - Ghost
      - Normal
  - type: Sprite
    overrideContainerOcclusion: true # Ghosts always show up regardless of where they're contained.
    drawdepth: Ghosts
    sprite: SimpleStation14/Mobs/Ghosts/ghost_admin.rsi  
    color: "#888888"
    layers:
    - state: aghost1
      shader: unshaded
  - type: ContentEye
    maxZoom: 8.916104, 8.916104
  - type: Tag
    tags:
    - InstantDoAfters
    - CanPilot
    - BypassInteractionRangeChecks
    - BypassDropChecks
  - type: Input
    context: "aghost"
  - type: Ghost
    canInteract: true
  - type: GhostHearing
  - type: Hands
  - type: Puller
  - type: CombatMode
  - type: Physics
    ignorePaused: true
    bodyType: Kinematic
  - type: Body
    prototype: Aghost
  - type: Access
    groups:
    - AllAccess
    tags:
    - NuclearOperative
    - SyndicateAgent
    - CentralCommand
  - type: UserInterface
    interfaces:
      enum.SolarControlConsoleUiKey.Key:
        type: SolarControlConsoleBoundUserInterface
      enum.CommunicationsConsoleUiKey.Key:
        type: CommunicationsConsoleBoundUserInterface
      enum.RadarConsoleUiKey.Key:
        type: RadarConsoleBoundUserInterface
      enum.CargoConsoleUiKey.Orders:
        type: CargoOrderConsoleBoundUserInterface
      enum.CrewMonitoringUIKey.Key:
        type: CrewMonitoringBoundUserInterface
      enum.GeneralStationRecordConsoleKey.Key:
      # who the fuck named this bruh
        type: GeneralStationRecordConsoleBoundUserInterface
  - type: IntrinsicUI
    uis:
      enum.SolarControlConsoleUiKey.Key:
        toggleAction: ActionAGhostShowSolar
      enum.CommunicationsConsoleUiKey.Key:
        toggleAction: ActionAGhostShowCommunications
      enum.RadarConsoleUiKey.Key:
        toggleAction: ActionAGhostShowRadar
      enum.CargoConsoleUiKey.Orders:
        toggleAction: ActionAGhostShowCargo
      enum.CrewMonitoringUIKey.Key:
        toggleAction: ActionAGhostShowCrewMonitoring
      enum.GeneralStationRecordConsoleKey.Key:
        toggleAction: ActionAGhostShowStationRecords
  - type: SolarControlConsole # look ma i AM the computer!
  - type: CommunicationsConsole
    title: comms-console-announcement-title-centcom
    color: "#228b22"
  - type: RadarConsole
    followEntity: true
  - type: CargoOrderConsole
  - type: CrewMonitoringConsole
  - type: GeneralStationRecordConsole
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: CrewMonitor
  - type: WirelessNetworkConnection
    range: 500
  - type: StationLimitedNetwork
  - type: Thieving
    stripTimeMultiplier: 0
    stealthy: true
    ignoreStripHidden: true
  - type: Stripping
  - type: SolutionScanner
  - type: IgnoreUIRange
  - type: ShowRevIcons
  - type: ShowZombieIcons
  - type: Inventory
    templateId: aghost
  - type: InventorySlots
  - type: Loadout
    prototypes: [ MobAghostGear ]
  - type: RandomSprite
    available:
      - 0:
          aghost1: ""                               
          aghost3: ""           
          aghost4: ""           
          aghost5: "" 

- type: entity
  id: ActionAGhostShowSolar
  name: Solar Control Interface
  description: View a solar control interface.
  noSpawn: true
  components:
  - type: InstantAction
    icon: Corvax/Interface/AdminActions/solar.png # Corvax-Resprite
    iconOn: Corvax/Interface/AdminActions/solar.png # Corvax-Resprite
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.SolarControlConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowCommunications
  name: Communications Interface
  description: View a communications interface.
  noSpawn: true
  components:
  - type: InstantAction
    icon: Corvax/Interface/AdminActions/communications.png # Corvax-Resprite
    iconOn: Corvax/Interface/AdminActions/communications.png # Corvax-Resprite
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.CommunicationsConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowRadar
  name: Mass Scanner Interface
  description: View a mass scanner interface.
  noSpawn: true
  components:
  - type: InstantAction
    icon: Corvax/Interface/AdminActions/radar.png # Corvax-Resprite
    iconOn: Corvax/Interface/AdminActions/radar.png # Corvax-Resprite
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.RadarConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowCargo
  name: Cargo Ordering Interface
  description: View a cargo ordering interface.
  noSpawn: true
  components:
  - type: InstantAction
    icon: Corvax/Interface/AdminActions/cargo.png # Corvax-Resprite
    iconOn: Corvax/Interface/AdminActions/cargo.png # Corvax-Resprite
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.CargoConsoleUiKey.Orders }

- type: entity
  id: ActionAGhostShowCrewMonitoring
  name: Crew Monitoring Interface
  description: View a crew monitoring interface.
  noSpawn: true
  components:
  - type: InstantAction
    icon: Corvax/Interface/AdminActions/monitoring.png # Corvax-Resprite
    iconOn: Corvax/Interface/AdminActions/monitoring.png # Corvax-Resprite
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.CrewMonitoringUIKey.Key }

- type: entity
  id: ActionAGhostShowStationRecords
  name: Station Records Interface
  description: View a station records Interface
  noSpawn: true
  components:
  - type: InstantAction
    icon: Corvax/Interface/AdminActions/records.png # Corvax-Resprite
    iconOn: Corvax/Interface/AdminActions/records.png # Corvax-Resprite
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.GeneralStationRecordConsoleKey.Key }
